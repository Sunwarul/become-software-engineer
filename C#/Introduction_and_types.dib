#!markdown

# Introduction to C# Programming

#!csharp

void p(object o) 
{
    Console.WriteLine(o);
}

#!csharp

char[] vowels = new char[]{'a','e','i','o','u'};
char lastOne = vowels[^3];
p(lastOne);
p(vowels[^1]);

#!csharp

var list = new List<string>();
list.Add("Name 1");
list.Add("Name 2");
list.Add("Name 3");
foreach(var i in list)
{
    p(i);
}

#!csharp

ArrayList arrayList = new ArrayList();
arrayList.Add("John");
arrayList.Add("James");
arrayList.Add("Erich");

foreach(var item in arrayList) {
    p(item);
}

#!csharp

// Illigal 
// class class Person {
//     // 
// }

// Legal
class @class {

}

#!csharp

// For regular uses
// int x = 10;
int @x = 10; // Hence, int x, and int @x both are same.
p(x);

#!csharp

string m1 = "Hello";
string m2 = "world";
string message = m1 + m2; // Concat
p(message.ToUpper()); // Uppercase
p(message.ToLower()); // Lowercase

#!csharp

bool isAdmin = false;
if(isAdmin) {
    p("It's Admin");
} else {
    p("General user");
}

int x = 10;
if(x > 0) {
    p("Positive"); 
} else if(x < 0) {
    p("Negative");
} else {
    p("Zero");
}

#!csharp

class UnitConverter 
{
    private int _ratio;
    public UnitConverter(int ratio) {
        _ratio = ratio;
    }
    public int Convert(int unit) {
        return unit * _ratio;
    }
}

var feetToInchConverter = new UnitConverter(12);
int res = feetToInchConverter.Convert(10);
p(res);

#!csharp

// Static members
class Panda 
{
    public string Name;
    public static int Population;
    public Panda(string name) {
        Name = name;
        Population += 1;
    }
}

var p1 = new Panda("Panda 1");
var p2 = new Panda("Panda 2");
var p3 = new Panda("Panda 3");

p(p1.Name);
p(p2.Name);
p(p3.Name);

p(Panda.Population);

#!csharp

int x = 1234;
long y = x;
byte z = (byte) x;
p(z);
